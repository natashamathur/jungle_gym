from langdetect import detect

def cleanup(message):
    PUNC  = "!?.#@$%^&*()"
    message = message.lower()
    
    final = ''
    for i in message:
        final = final + i.strip(PUNC)

    return final
      
def caesar_cipher(cipher_type, message, encode=True):
    ALPHABET = "abcdefghijklmnopqrstuvwxyz"
    message = cleanup(message)
    start = ALPHABET.find(cipher_type)
    ciph_letters = ALPHABET[start:] + ALPHABET[:start]
    translated = ''

    if encode == True:
        output, input = ciph_letters, ALPHABET
    else:
        output, input = ALPHABET, ciph_letters
        
    for letter in message:
        if letter == ' ':
            translated = translated + letter
        else:
            translated = translated + output[input.find(letter)]

    return translated

x = caesar_cipher("g", "Procrastination is awesome!")
print(x)

def decipher(message):
    ALPHABET = "abcdefghijklmnopqrstuvwxyz"
    
    for letter in ALPHABET:
        translated = caesar_cipher(letter, message, encode=False)
        if detect(translated) == 'en':
            return translated, letter

    return "Cannot be translated to English"

print(decipher(x))
